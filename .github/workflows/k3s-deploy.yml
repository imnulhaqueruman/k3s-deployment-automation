name: K3s deployment using Ansible

on:
  push:
    branches:
      - main
    paths:
      - ansible/**

jobs:
  setup_runner:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      - name: Pulumi login
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: pulumi login

      - name: Pulumi stack select
        run: pulumi stack select dev --cwd infra

      - name: Pulumi refresh
        run: pulumi refresh --yes --cwd infra
      
      - name: Save Pulumi outputs
        id: pulumi_outputs
        run: |
          echo "GIT_RUNNER_IP=$(pulumi stack output git_runner_public_ip --cwd infra)" >> $GITHUB_ENV
          echo "MASTER_NODE_IP=$(pulumi stack output master_private_ip --cwd infra)" >> $GITHUB_ENV
          echo "WORKER_NODE1_IP=$(pulumi stack output worker1_private_ip --cwd infra)" >> $GITHUB_ENV
          echo "WORKER_NODE2_IP=$(pulumi stack output worker2_private_ip --cwd infra)" >> $GITHUB_ENV
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Prepare Remote Instance for Ansible
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.GIT_RUNNER_IP }} << 'EOF'
          # Install Ansible
          sudo apt update
          sudo apt install -y ansible

          # Copy Ansible directory
          mkdir -p /home/ubuntu/ansible
          EOF
          scp -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/ansible ubuntu@${{ env.GIT_RUNNER_IP }}:/home/ubuntu/

      - name: Update Inventory and Run Ansible
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.GIT_RUNNER_IP }} << 'EOF'
          # Update inventory file with dynamic IPs
          sed -i "s/^master-node ansible_host=.*/master-node ansible_host=${{ env.MASTER_NODE_IP }}/" /home/ubuntu/ansible/inventory/hosts.ini
          sed -i "s/^worker-node-1 ansible_host=.*/worker-node-1 ansible_host=${{ env.WORKER_NODE1_IP }}/" /home/ubuntu/ansible/inventory/hosts.ini
          sed -i "s/^worker-node-2 ansible_host=.*/worker-node-2 ansible_host=${{ env.WORKER_NODE2_IP }}/" /home/ubuntu/ansible/inventory/hosts.ini

          # Run the Ansible playbook
          cd /home/ubuntu/ansible
          ansible-playbook -i inventory/hosts.ini site.yml
          EOF
